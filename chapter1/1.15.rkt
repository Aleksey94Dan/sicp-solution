#lang racket

(define (cube x) (* x x x))

(define (p x) (- (* 3 x) (* 4 (cube x))))


(define (sine angle)
    (if (not (> (abs angle) 0.1))
    angle
    (p (sine (/ angle 3.0)))))

(sine 12.15)

; Сколько раз вызывается процедура p при вычилении (sine 12.15)
;(sine 12.15)
; (p (sine 4.05)) -> 1 вызов процедуры p
; (p (p (sine 1.34))) -> 2 вызов процедуры p
; (p (p (p (sine 0.46)))) -> 3 вызов процедуры p
; (p (p (p (p (sine 0.15))))) -> 4 вызов процедуры p
; (p (p (p (p (p (sine 0.05)))))) -> -> 5 вызов процедуры p
; (p (p (p (p (p 0.05)))))
; Процедура p вызывается 5 раз.
; Число шагов растет логарифмически с ростом угла  O(log(a)). Память пропорциональна числу шагов.


